language: cpp
dist: xenial

os:
  - linux
  - osx

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-add-repository ppa:beineri/opt-qt-5.12.0-xenial -y;
      sudo apt-get update -q;
    fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get install qt512base qt512quickcontrols2 qt512connectivity qt512svg qt512imageformats qt512tools qt512charts-no-lgpl sqlite3 -y;
      sudo apt-get install libgl1-mesa-dev -y;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install qt;
    fi

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then source /opt/qt512/bin/qt512-env.sh; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH=$PATH:/usr/local/opt/qt/bin:/usr/local/bin; fi
  - qmake CONFIG+=release PREFIX=/usr

script:
  - |-
  - make -j$(nproc)
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      make INSTALL_ROOT=appdir -j$(nproc) install; find appdir/;
      wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/5/linuxdeployqt-5-x86_64.AppImage";
      chmod a+x linuxdeployqt-continuous-x86_64.AppImage;
      unset QTDIR; unset QT_PLUGIN_PATH; unset LD_LIBRARY_PATH;
      export VERSION=$(git rev-parse --short HEAD);
      mkdir -p appdir/usr/plugins/imageformats/ appdir/usr/plugins/iconengines/;
      cp /opt/qt512/plugins/imageformats/libqsvg.so appdir/usr/plugins/imageformats/;
      cp /opt/qt512/plugins/iconengines/libqsvgicon.so appdir/usr/plugins/iconengines/;
      ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -qmldir=qml/ -bundle-non-qt-libs -extra-plugins=imageformats/libqsvg.so,iconengines/libqsvgicon.so;
      ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -qmldir=qml/ -appimage;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      make install;
    fi

after_success:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq;
      curl --upload-file WatchFlower*.AppImage https://transfer.sh/WatchFlower-git.$(git rev-parse --short HEAD)-linux64.AppImage;
      echo '>> Uploading to transfer.sh completed';
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      cd bin/;
      zip -r -X WatchFlower.zip WatchFlower.app;
      curl --upload-file WatchFlower*.zip https://transfer.sh/WatchFlower-git.$(git rev-parse --short HEAD)-macOS.zip;
      echo '>> Uploading to transfer.sh completed';
    fi
